mixin list-notes(notes)
  .item-listing.notes
    each note in notes
      - let targetLoc = "/notes/" + note.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          .label Name:
          .data #{note.name}
        - let description = note.description || null
        if description
          .itemdetail
            .label Description:
            .data #{note.description}

mixin list-blogs(notes)
  .item-listing.blogs
    each note in notes
      - let targetLoc = "/blog/" + note.slug + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          .label Name:
          .data
            a(href="/blog/" + note.slug + "/") #{note.name}
        - let description = note.description || null
        if description
          .itemdetail
            .label Description:
            .data #{note.description}

mixin list-articles(notes)
  .item-listing.articles
    each note in notes
      - let targetLoc = "/blog/" + note.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail.articletitle
          .data 
            a(href="/blog/" + note.slug + "/") #{note.name}
        - let description = note.description || null
        if description
          .itemdetail.articledescription
            .data #{note.description}
        .itemdetail.articleauthor.articlemeta
          .data by: #{note.user.firstname} #{note.user.lastname}
        .itemdetail.articledate.articlemeta
          - let date = new Date(Date.parse(note.updatedAt))
          .data on: #{date.toLocaleDateString()}
        .itemdetail.articledomain.articlemeta
          .data category: #{note.domain.name}


mixin list-files(files)
  .item-listing.files
    each file in files
      - let targetLoc = "/files/" + file.id + "/";
      .mediaitem.clickable(onclick="goTo('" + targetLoc + "')")
        .thumbnail
          img(src="/thumbs/" + file.appid)
        .itemdetails
          .itemdetail
            label.label Name:
            .data #{file.name}
          - let description = file.description || null
          if description
            .itemdetail
              label.label Description:
              .data #{file.description}
          if file.domain.name
            .itemdetail
              label.label Domain:
              .data #{file.domain.name}

mixin list-users(users)
  .item-listing.users
    each user in users
      - let targetLoc = "/users/" + user.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail.layout-col
          .label User:
          .data #[a(href="/users/" + user.id + "/") #{user.fullname}]
        - let email = user.email || null
        if email
          .itemdetail.layout-col
            .label Email:
            .data #{user.email}
        - let roles = user.roles || null;
        if roles
          .itemdetail.layout-col
            - let labelLabel = (roles.length>1) ? "Roles" : "Role"
            .label #{labelLabel}:
            each role in roles
              .data #{role.name}

mixin list-domains(domains)
  //- #domain_add_button_container.addrole.layout-row.layout-justify-between.authUI(data-fetch="domain_add" data-href="/actions/create/domains/")
  .item-listing.domains
    each domain in domains
      - let targetLoc = "/domains/" + domain.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          label.label Name:
          .data #{domain.name}
        - let description = domain.description || null
        if description
          .itemdetail
            label.label Description:
            .data #{domain.description}

mixin select-domains(domains,defaultId)
  .item-listing.domains
    select#domain(name="domainId")
      each domain in domains
        if defaultId == domain.id
          option(value=domain.id selected=true) #{domain.name}
        else 
          option(value=domain.id selected=false) #{domain.name}