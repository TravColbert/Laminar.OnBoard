mixin list-notes(notes)
  .item-listing.notes
    each note in notes
      - let targetLoc = "/notes/" + note.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          .label Name:
          .data #{note.name}
        - let description = note.description || null
        if description
          .itemdetail
            .label Description:
            .data #{note.description}

mixin list-blogs(notes)
  .item-listing.blogs
    each note in notes
      - let targetLoc = "/blog/" + note.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          .label Name:
          .data #{note.name}
        - let description = note.description || null
        if description
          .itemdetail
            .label Description:
            .data #{note.description}

mixin list-articles(notes)
  .item-listing.articles
    each note in notes
      - let targetLoc = "/blog/" + note.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail.articletitle
          .data #{note.name}
        - let description = note.description || null
        if description
          .itemdetail.articledescription
            .data #{note.description}
        .itemdetail.articleauthor.articlemeta
          .data by: #{note.user.firstname} #{note.user.lastname}
        .itemdetail.articledate.articlemeta
          - let date = new Date(Date.parse(note.updatedAt))
          .data on: #{date.toLocaleDateString()}
        .itemdetail.articledomain.articlemeta
          .data category: #{note.domain.name}
    //- - }

mixin list-domains(domains)
  //- #domain_add_button_container.addrole.layout-row.layout-justify-between.authUI(data-fetch="domain_add" data-href="/actions/create/domains/")
  .item-listing.domains
    each domain in domains
      - let targetLoc = "/domains/" + domain.id + "/";
      .item.clickable(onclick="goTo('" + targetLoc + "')")
        .itemdetail
          label.label Name:
          .data #{domain.name}
        - let description = domain.description || null
        if description
          .itemdetail
            label.label Description:
            .data #{domain.description}

mixin select-domains(domains,defaultId)
  .item-listing.domains
    select#domain(name="domainId")
      each domain in domains
        if defaultId == domain.id
          option(value=domain.id selected=true) #{domain.name}
        else 
          option(value=domain.id selected=false) #{domain.name}